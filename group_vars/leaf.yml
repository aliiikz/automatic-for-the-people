isl_ports:
  cumulus:
    - swp1
    - swp2
  nxos:
    - Eth1/1
    - Eth1/2
  eos:
    - Eth1
    - Eth2
  junos:
    - xe-0/0/0
    - xe-0/0/1

# l2_networks is keyed off of VLANID
l2_networks:
  10:
    vnid: 10
    vlanif: Vlan10
    ip_address: 172.16.1.254/24
    mcast_grp: 224.1.1.192
    ip_subnet: 172.16.1.0/24
    vrf: evpn-vrf

  20:
    vnid: 20
    vlanif: Vlan20
    ip_address: 172.16.2.254/24
    mcast_grp: 224.1.1.192
    ip_subnet: 172.16.2.0/24
    vrf: evpn-vrf

  30:
    vnid: 30
    vlanif: Vlan30
    ip_address: 172.16.3.254/24
    mcast_grp: 224.1.1.192
    ip_subnet: 172.16.3.0/24    
    vrf: evpn-vrf

evpn_peers:
  - 10.0.0.21
  - 10.0.0.22

# The ID is the VLAN ID; Obviously VLANIDs can only be < 255 with this schemq
anycast_gw_mac: "00:00:00:11:12:{{ item.vlanid }}"

evpn_l3_info:
  - vlan: 999
    vnid: 999
    vlanif: vlan999
    junos_vrf_loopback_ip:
      leaf01:
        10.0.0.101/32
      leaf02:
        10.0.0.102/32
    vrf: evpn-vrf

l2vni_ifs: "{{ ['vni'] | zip_longest(l2_networks | json_query('[*].vnid') | map('string') | list, fillvalue='vni') | map('join', '') | join(' ') }}"

l3vni_ifs: "{{ ['vni'] | zip_longest(evpn_l3_info | json_query('[*].vnid') | map('string') | list, fillvalue='vni') | map('join', '') | join(' ') }}"

l2_ifs: "{{ l2_ports[ansible_network_os] | json_query('[*].iface') | join(' ') }}"

vid_list: "{{ l2_ports[ansible_network_os] | json_query('[*].vlanid') | join(' ') }}"
