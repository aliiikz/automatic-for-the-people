---
- name: Assign RD/RT for L2VNI (NXOS)
  connection: network_cli
  cli_config:
    config: |
     evpn
       vni {{ l2_networks[item.vlanid].vnid }} l2
         rd auto
         route-target import auto
         route-target export auto
  with_items: "{{ l2_ports[ansible_network_os] }}"
  when: l2_ports is defined
      
- name: iBGP base config (NXOS)
  connection: network_cli
  cli_config:
    config: |
      router bgp {{ ibgp_asn }}
         log-neighbor-changes
         address-family ipv4 unicast
         address-family l2vpn evpn
           retain route-target all
         template peer VXLAN_LEAF
           remote-as {{ ibgp_asn }}
           update-source loopback0
           address-family ipv4 unicast
              send-community extended
              route-reflector-client
              soft-reconfiguration inbound
           address-family l2vpn evpn
              send-community
              send-community extended
              route-reflector-client
         template peer VXLAN_SPINE
           remote-as {{ ibgp_asn }}
           update-source loopback0
           address-family ipv4 unicast
              send-community extended
              soft-reconfiguration inbound
           address-family l2vpn evpn
              send-community
              send-community extended

- name: iBGP neighbor config for leafs (NXOS)
  connection: network_cli
  cli_config:
    config: |
      router bgp {{ ibgp_asn }}
        neighbor {{ item }}
          inherit peer VXLAN_SPINE
  with_items: "{{ evpn_peers }}"
  when: inventory_hostname not in groups['spine']

- name: iBGP neighbor config for spines (NXOS)
  connection: network_cli
  cli_config:
    config: |
      router bgp {{ ibgp_asn }}
        neighbor {{ item }}
           inherit peer VXLAN_LEAF
  with_items: "{{ evpn_peers }}"
  when: inventory_hostname in groups['spine']  

- name: Advertise L3 GW address (NXOS)
  connection: network_cli
  cli_config:
    config: |
      router bgp {{ ibgp_asn }}
        vrf {{ l2_networks[item.vlanid].vrf }}
          log-neighbor-changes
          address-family ipv4 unicast
            network {{ l2_networks[item.vlanid].ip_subnet  }}
            advertise l2vpn evpn

  with_items: "{{ l2_ports[ansible_network_os] }}"
  when: l2_ports is defined
